<?xml version="1.0" encoding="utf-8"?>
<Page x:Class="Rememory.Views.ClipboardRootPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:Rememory.Views"
      xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
      xmlns:models="using:Rememory.Models"
      xmlns:vm="using:Rememory.ViewModels"
      xmlns:tk="using:CommunityToolkit.WinUI"
      xmlns:tkconverters="using:CommunityToolkit.WinUI.Converters"
      xmlns:converters="using:Rememory.Converters"
      xmlns:controls="using:Rememory.Views.Controls"
      xmlns:behavior="using:Rememory.Views.Controls.Behavior"
      x:Name="RootPage"
      DataContext="{x:Bind ViewModel}"
      Background="{x:Bind ViewModel.SettingsContext.CurrentWindowBackgroundBrush, Mode=OneWay}"
      SizeChanged="ClipboardRootPage_SizeChanged"
      KeyUp="Escape_KeyUp">
    <Page.Resources>
        <tkconverters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <tkconverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:ClipToControlConverter x:Key="ClipToControlConverter"
                                           SearchString="{x:Bind ViewModel.SearchString, Mode=OneWay}" />
        <converters:DateTimeToHumanReadableConverter x:Key="DateTimeToHumanReadableConverter" />
        <converters:DataFooterInfoConverter x:Key="DataFooterInfoConverter" />

        <Style x:Key="DataPreviewFlyoutPresenterStyle"
               BasedOn="{StaticResource DefaultFlyoutPresenterStyle}"
               TargetType="FlyoutPresenter">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="{ThemeResource FlyoutBorderThemeBrush}" />
            <Setter Property="BorderThickness"
                    Value="{ThemeResource FlyoutBorderThemeThickness}" />
            <Setter Property="Padding"
                    Value="{StaticResource FlyoutContentPadding}" />
            <Setter Property="MinWidth"
                    Value="{ThemeResource FlyoutThemeMinWidth}" />
            <Setter Property="MaxWidth"
                    Value="{ThemeResource FlyoutThemeMaxWidth}" />
            <Setter Property="MinHeight"
                    Value="{ThemeResource FlyoutThemeMinHeight}" />
            <Setter Property="MaxHeight"
                    Value="{ThemeResource FlyoutThemeMaxHeight}" />
            <Setter Property="CornerRadius"
                    Value="{ThemeResource OverlayCornerRadius}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="FlyoutPresenter">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BackgroundSizing="InnerBorderEdge">
                            <ScrollViewer x:Name="ScrollViewer"
                                          behavior:ScrollViewerBehavior.AutoScrollToStartOnShow="True"
                                          ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                          HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          AutomationProperties.AccessibilityView="Raw">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Flyout x:Key="PreviewTextFlyout"
                ShowMode="Transient"
                ShouldConstrainToRootBounds="False"
                Placement="LeftEdgeAlignedTop"
                Closed="PreviewFlyout_Closed">
            <Flyout.SystemBackdrop>
                <DesktopAcrylicBackdrop />
            </Flyout.SystemBackdrop>
            <TextBlock FontSize="12"
                       TextWrapping="Wrap"
                       IsTextSelectionEnabled="True" />
        </Flyout>

        <Flyout x:Key="PreviewRtfFlyout"
                ShowMode="Transient"
                ShouldConstrainToRootBounds="False"
                Placement="LeftEdgeAlignedTop"
                Closed="PreviewFlyout_Closed">
            <Flyout.SystemBackdrop>
                <DesktopAcrylicBackdrop />
            </Flyout.SystemBackdrop>
            <RichEditBox FontSize="12"
                         BorderThickness="0"
                         TextWrapping="Wrap">
                <RichEditBox.Resources>
                    <SolidColorBrush x:Key="TextControlBackground"
                                     Color="White" />
                    <SolidColorBrush x:Key="TextControlBackgroundDisabled"
                                     Color="White" />
                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver"
                                     Color="White" />
                    <SolidColorBrush x:Key="TextControlBackgroundFocused"
                                     Color="White" />
                </RichEditBox.Resources>
            </RichEditBox>
        </Flyout>

        <Flyout x:Key="PreviewImageFlyout"
                ShowMode="Transient"
                ShouldConstrainToRootBounds="False"
                Placement="LeftEdgeAlignedTop"
                Closed="PreviewFlyout_Closed">
            <Flyout.SystemBackdrop>
                <DesktopAcrylicBackdrop />
            </Flyout.SystemBackdrop>
            <Image behavior:ImageAutoResizeBehavior.AutoResize="True" />
        </Flyout>

        <MenuFlyout x:Key="ContextMenuFlyout">
            <ToggleMenuFlyoutItem x:Uid="TitleMenuButton_PinWindow"
                                  IsChecked="{x:Bind ViewModel.IsWindowPinned, Mode=TwoWay}"
                                  Icon="{tk:FontIcon FontSize=16, Glyph=&#xE718;}" />
            <ToggleMenuFlyoutItem x:Uid="TitleMenuButton_PauseMonitoring"
                                  IsChecked="{x:Bind ViewModel.IsClipboardMonitoringPaused, Mode=TwoWay}"
                                  Icon="{tk:FontIcon FontSize=16, Glyph=&#xF0E3;}" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem x:Uid="TitleMenuButton_Settings"
                            Click="SettingsButton_Click"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xE713;}" />
            <MenuFlyoutItem x:Uid="TitleMenuButton_Quit"
                            Click="QuitButton_Click"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xEA39;}" />
        </MenuFlyout>
    </Page.Resources>

    <!-- Using BorderBrush to display border on Windows 10 (not visible on Win11) -->
    <Grid BorderThickness="1"
          BorderBrush="{ThemeResource ButtonBorderBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*"
                              MinWidth="50" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <SelectorBar x:Name="NavigationSelectorBar"
                     AutomationProperties.AutomationId="NavigationSelectorBar"
                     AutomationProperties.Name="Title Bar Navigation"
                     Grid.Column="0"
                     Grid.Row="0"
                     Margin="5 0"
                     TabIndex="4"
                     Loaded="NavigationSelectorBar_Loaded">
            <SelectorBarItem x:Name="HomeMenuItem"
                             x:Uid="NavigationMenu_Home"
                             AutomationProperties.AutomationId="NavigationSelectorBarItem"
                             AutomationProperties.Name="Home Menu Item"
                             Icon="Home"
                             Background="Transparent" />
            <SelectorBarItem x:Name="FavoritesMenuItem"
                             x:Uid="NavigationMenu_Favorites"
                             AutomationProperties.AutomationId="NavigationSelectorBarItem"
                             AutomationProperties.Name="Favorites Menu Item"
                             Icon="OutlineStar"
                             Background="Transparent" />
            <SelectorBarItem x:Name="ImagesMenuItem"
                             x:Uid="NavigationMenu_Images"
                             AutomationProperties.AutomationId="NavigationSelectorBarItem"
                             AutomationProperties.Name="Images Menu Item"
                             Icon="Pictures"
                             Background="Transparent" />
            <SelectorBarItem x:Name="LinksMenuItem"
                             x:Uid="NavigationMenu_Links"
                             AutomationProperties.AutomationId="NavigationSelectorBarItem"
                             AutomationProperties.Name="Link Menu Item"
                             Icon="Link"
                             Background="Transparent" />
        </SelectorBar>

        <Border x:Name="WindowDragArea"
                Grid.Column="1"
                Grid.Row="0"
                Background="Transparent"
                PointerPressed="WindowDragArea_PointerPressed"
                PointerReleased="WindowDragArea_PointerReleased"
                PointerMoved="WindowDragArea_PointerMoved"
                ContextFlyout="{StaticResource ContextMenuFlyout}" />

        <StackPanel Grid.Column="2"
                    Grid.Row="0"
                    Margin="5 0"
                    Orientation="Horizontal"
                    VerticalAlignment="Center">
            <!-- Change style to custom one -->
            <Button x:Uid="TitleButton_More"
                    AutomationProperties.AutomationId="TitleBarButtons"
                    AutomationProperties.Name="More"
                    Content="{tk:FontIcon FontSize=16, Glyph=&#xE712;}"
                    Style="{ThemeResource AlternateCloseButtonStyle}"
                    Flyout="{StaticResource ContextMenuFlyout}" />

            <Button x:Name="CloseButton"
                    x:Uid="TitleButton_Close"
                    AutomationProperties.AutomationId="TitleBarButtons"
                    AutomationProperties.Name="Close Window"
                    Click="CloseButton_Click"
                    Content="{tk:FontIcon FontSize=16, Glyph=&#xE711;}"
                    Style="{ThemeResource AlternateCloseButtonStyle}" />
        </StackPanel>

        <Grid Grid.ColumnSpan="3"
              Grid.Row="1"
              Margin="6 2"
              ColumnSpacing="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <AutoSuggestBox x:Name="SearchBox"
                            x:Uid="SearchBox"
                            AutomationProperties.AutomationId="SearchBox"
                            AutomationProperties.Name="Search Clips"
                            TabIndex="2"
                            VerticalAlignment="Center"
                            IsEnabled="{x:Bind ViewModel.IsSearchEnabled, Mode=OneWay}"
                            Text="{x:Bind ViewModel.SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Button x:Name="FilterButton"
                    x:Uid="FilterButton"
                    AutomationProperties.AutomationId="FilterButton"
                    AutomationProperties.Name="Filter Clips"
                    Grid.Column="1"
                    Height="32"
                    TabIndex="3"
                    Content="{tk:FontIcon FontSize=14, Glyph=&#xE71C;}">
                <Button.Flyout>
                    <Flyout ShouldConstrainToRootBounds="False">
                        <Flyout.FlyoutPresenterStyle>
                            <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}"
                                   TargetType="FlyoutPresenter">
                                <Setter Property="MaxHeight"
                                        Value="500" />
                            </Style>
                        </Flyout.FlyoutPresenterStyle>
                        
                        <TreeView x:Name="FilterTreeView"
                                  SelectionMode="Multiple"
                                  CanDragItems="False"
                                  CanReorderItems="False"
                                  ItemsSource="{x:Bind ViewModel.AppTreeViewNodes, Mode=OneWay}"
                                  Loaded="FilterTreeView_Loaded"
                                  SelectionChanged="FilterTreeView_SelectionChanged">
                            <TreeView.ItemTemplate>
                                <DataTemplate x:DataType="models:AppTreeViewNode">
                                    <TreeViewItem CanDrag="False"
                                                  ItemsSource="{x:Bind Children, Mode=OneWay}"
                                                  IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}"
                                                  ToolTipService.ToolTip="{x:Bind OwnerPath, Mode=OneWay}">
                                        <Grid Margin="-28 0 8 0"
                                              ColumnSpacing="8">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Width="20"
                                                   Height="20"
                                                   Source="{x:Bind Image, Mode=OneWay}" />
                                            <TextBlock Grid.Column="1"
                                                       MaxWidth="200"
                                                       TextTrimming="CharacterEllipsis"
                                                       Text="{x:Bind Title, Mode=OneWay}" />
                                        </Grid>
                                    </TreeViewItem>
                                </DataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </Flyout>
                </Button.Flyout>
            </Button>
        </Grid>

        <Grid x:Name="MonitoringPausedBanner"
              Grid.ColumnSpan="3"
              Grid.Row="2"
              Margin="6 2 6 0"
              Padding="8"
              ColumnSpacing="8"
              CornerRadius="8"
              BorderBrush="{ThemeResource InfoBarBorderBrush}"
              BorderThickness="{ThemeResource InfoBarBorderThickness}"
              Background="{ThemeResource InfoBarWarningSeverityBackgroundBrush}"
              Visibility="{x:Bind ViewModel.IsClipboardMonitoringPaused, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <FontIcon Margin="4 0 0 0"
                      FontSize="16"
                      Glyph="&#xF167;"
                      Foreground="{ThemeResource InfoBarWarningSeverityIconBackground}" />
            <TextBlock x:Uid="Banner_PausedMonitoring"
                       Grid.Column="1"
                       TextWrapping="Wrap" />
        </Grid>

        <ListView x:Name="ClipsListView"
                  AutomationProperties.AutomationId="ClipsList"
                  AutomationProperties.Name="All Clips"
                  Grid.ColumnSpan="3"
                  Grid.Row="3"
                  Padding="5 3"
                  TabIndex="1"
                  SelectionMode="None"
                  ShowsScrollingPlaceholders="False"
                  CanDragItems="{x:Bind ViewModel.SettingsContext.EnableItemDragAndDrop, Mode=OneWay}"
                  ItemsSource="{x:Bind ViewModel.ClipsCollection, Mode=OneWay}"
                  DragItemsStarting="ClipsListView_DragItemsStarting">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="IsTabStop"
                            Value="False" />
                    <Setter Property="AutomationProperties.AutomationId"
                            Value="ClipItem" />
                    <Setter Property="AutomationProperties.Name"
                            Value="Clip Item" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Grid Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <FontIcon Glyph="&#xE784;"
                                              Margin="-4 0 0 0"
                                              FontSize="16"
                                              Foreground="{ThemeResource AccentAAFillColorDefaultBrush}"
                                              Visibility="{Binding CanDragItems, ElementName=ClipsListView, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    <ContentPresenter Grid.Column="1" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:ClipModel">
                    <Button x:Name="ClipButton"
                            AutomationProperties.AutomationId="ClipButton"
                            AutomationProperties.Name="Select Clip"
                            Padding="6"
                            CornerRadius="8"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            KeyboardAcceleratorPlacementMode="Hidden"
                            CommandParameter="{x:Bind Mode=OneWay}"
                            Command="{Binding DataContext.PasteClipCommand, ElementName=ClipsListView}"
                            GotFocus="ClipButton_GotFocus"
                            IsEnabled="{x:Bind IsOpenInEditor, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Space"
                                                 Invoked="OpenInFlyoutKeyboardAccelerator_Invoked" />
                            <KeyboardAccelerator Key="Enter"
                                                 Modifiers="Shift"
                                                 Invoked="PastePlainTextKeyboardAccelerator_Invoked" />
                            <KeyboardAccelerator Key="C"
                                                 Modifiers="Control"
                                                 Invoked="CopyKeyboardAccelerator_Invoked" />
                            <KeyboardAccelerator Key="U"
                                                 Modifiers="Control"
                                                 Invoked="EditKeyboardAccelerator_Invoked" />
                        </Button.KeyboardAccelerators>

                        <Button.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Click="FavoriteMenuItem_Click"
                                                Loading="FavoriteMenuItem_Loading" />
                                <MenuFlyoutItem x:Uid="ContextMenu_OpenInFlyout"
                                                KeyboardAcceleratorTextOverride="Space"
                                                Click="OpenInFlyoutItem_Click"
                                                Icon="{tk:FontIcon Glyph=&#xE8A7;}" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem x:Uid="ContextMenu_Paste"
                                                KeyboardAcceleratorTextOverride="Enter"
                                                CommandParameter="{x:Bind Mode=OneWay}"
                                                Command="{Binding DataContext.PasteClipCommand, ElementName=ClipsListView}"
                                                Icon="{tk:FontIcon Glyph=&#xE77F;}" />
                                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsPlainText"
                                                KeyboardAcceleratorTextOverride="Shift+Enter"
                                                CommandParameter="{x:Bind Mode=OneWay}"
                                                Command="{Binding DataContext.PasteClipAsPlainTextCommand, ElementName=ClipsListView}"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Icon="{tk:FontIcon Glyph=&#xE8D2;}" />
                                <MenuFlyoutItem x:Uid="ContextMenu_Copy"
                                                KeyboardAcceleratorTextOverride="Ctrl+C"
                                                CommandParameter="{x:Bind Mode=OneWay}"
                                                Command="{Binding DataContext.CopyClipCommand, ElementName=ClipsListView}"
                                                Icon="{tk:FontIcon Glyph=&#xE8C8;}" />
                                <MenuFlyoutItem x:Uid="ContextMenu_Edit"
                                                KeyboardAcceleratorTextOverride="Ctrl+U"
                                                CommandParameter="{x:Bind Mode=OneWay}"
                                                Command="{Binding DataContext.EditClipCommand, ElementName=ClipsListView}"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Icon="{tk:FontIcon Glyph=&#xE70F;}" />
                                <MenuFlyoutItem x:Uid="ContextMenu_Delete"
                                                CommandParameter="{x:Bind Mode=OneWay}"
                                                Command="{Binding DataContext.DeleteClipCommand, ElementName=ClipsListView}"
                                                Icon="{tk:FontIcon Glyph=&#xE74D;}" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutSubItem x:Uid="ContextMenu_More"
                                                   Icon="{tk:FontIcon Glyph=&#xE712;}">
                                    <MenuFlyoutItem x:Uid="ContextMenu_Filter"
                                                    CommandParameter="{x:Bind Owner, Mode=OneWay}"
                                                    Command="{Binding DataContext.AddOwnerToFiltersCommand, ElementName=ClipsListView}"
                                                    Icon="{tk:FontIcon Glyph=&#xE71C;}" />
                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Button.ContextFlyout>
                        <Grid ColumnSpacing="10"
                              RowSpacing="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ContentControl Grid.ColumnSpan="3"
                                            MaxHeight="120"
                                            IsTabStop="False"
                                            HorizontalContentAlignment="Stretch"
                                            Content="{x:Bind Data, Mode=OneWay, Converter={StaticResource ClipToControlConverter}}" />
                            <TextBlock Grid.Row="1"
                                       Padding="4 0"
                                       FontSize="12"
                                       TextWrapping="Wrap"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                       DataContext="{x:Bind Data, Mode=OneWay, Converter={StaticResource DataFooterInfoConverter}}"
                                       Text="{Binding Result}" />
                            <TextBlock Grid.Column="1"
                                       Grid.Row="1"
                                       FontSize="12"
                                       TextWrapping="Wrap"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                       Text="{x:Bind ClipTime, Mode=OneWay, Converter={StaticResource DateTimeToHumanReadableConverter}}" />
                            <Image Grid.Column="2"
                                   Grid.Row="1"
                                   Height="16"
                                   Source="{x:Bind Owner.IconBitmap, Mode=OneWay}" />
                        </Grid>
                    </Button>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
